# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import WorkProtocolService_pb2 as proto_dot_WorkProtocolService__pb2


class WorkProtocolServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.echo = channel.unary_unary(
                '/com.kkennib.grpc.WorkProtocolService/echo',
                request_serializer=proto_dot_WorkProtocolService__pb2.Work.SerializeToString,
                response_deserializer=proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
                )
        self.collectUrls = channel.unary_unary(
                '/com.kkennib.grpc.WorkProtocolService/collectUrls',
                request_serializer=proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
                response_deserializer=proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
                )
        self.collectDocs = channel.unary_unary(
                '/com.kkennib.grpc.WorkProtocolService/collectDocs',
                request_serializer=proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
                response_deserializer=proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
                )
        self.extractTexts = channel.unary_unary(
                '/com.kkennib.grpc.WorkProtocolService/extractTexts',
                request_serializer=proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
                response_deserializer=proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
                )
        self.extractContents = channel.unary_unary(
                '/com.kkennib.grpc.WorkProtocolService/extractContents',
                request_serializer=proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
                response_deserializer=proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
                )


class WorkProtocolServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def echo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def collectUrls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def collectDocs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def extractTexts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def extractContents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkProtocolServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'echo': grpc.unary_unary_rpc_method_handler(
                    servicer.echo,
                    request_deserializer=proto_dot_WorkProtocolService__pb2.Work.FromString,
                    response_serializer=proto_dot_WorkProtocolService__pb2.WorkResponse.SerializeToString,
            ),
            'collectUrls': grpc.unary_unary_rpc_method_handler(
                    servicer.collectUrls,
                    request_deserializer=proto_dot_WorkProtocolService__pb2.Works.FromString,
                    response_serializer=proto_dot_WorkProtocolService__pb2.WorkResponse.SerializeToString,
            ),
            'collectDocs': grpc.unary_unary_rpc_method_handler(
                    servicer.collectDocs,
                    request_deserializer=proto_dot_WorkProtocolService__pb2.Works.FromString,
                    response_serializer=proto_dot_WorkProtocolService__pb2.WorkResponse.SerializeToString,
            ),
            'extractTexts': grpc.unary_unary_rpc_method_handler(
                    servicer.extractTexts,
                    request_deserializer=proto_dot_WorkProtocolService__pb2.Works.FromString,
                    response_serializer=proto_dot_WorkProtocolService__pb2.WorkResponse.SerializeToString,
            ),
            'extractContents': grpc.unary_unary_rpc_method_handler(
                    servicer.extractContents,
                    request_deserializer=proto_dot_WorkProtocolService__pb2.Works.FromString,
                    response_serializer=proto_dot_WorkProtocolService__pb2.WorkResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.kkennib.grpc.WorkProtocolService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkProtocolService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.kkennib.grpc.WorkProtocolService/echo',
            proto_dot_WorkProtocolService__pb2.Work.SerializeToString,
            proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def collectUrls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.kkennib.grpc.WorkProtocolService/collectUrls',
            proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
            proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def collectDocs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.kkennib.grpc.WorkProtocolService/collectDocs',
            proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
            proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def extractTexts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.kkennib.grpc.WorkProtocolService/extractTexts',
            proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
            proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def extractContents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.kkennib.grpc.WorkProtocolService/extractContents',
            proto_dot_WorkProtocolService__pb2.Works.SerializeToString,
            proto_dot_WorkProtocolService__pb2.WorkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
